{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Footer","style","color","fontStyle","fontSize","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"kLAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCPpCK,EAAU,aAkBDC,EADK,CAAEC,OAfP,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAACC,GAAD,OAAcA,EAASC,SAafC,OAVf,SAACC,GAEd,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAQPI,OALvB,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UCXvCO,EAAS,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,2GAOAC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAe,MAAXA,EAAwB,KAErB,qBAAKvB,UAAU,QAAf,SAAwBuB,KA+ElBC,EA5EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACR9B,EAAYC,SAASG,MAAK,SAAC2B,GACzBR,EAASQ,QAEV,IAEH,IAmCMC,EAAcN,EAAUJ,EAAQA,EAAMW,QAAO,SAACzC,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcwB,QAASS,IACvB,8BACE,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAAC1C,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAnDD,SAACkB,GAC1B,IAAMnB,EAAO8B,EAAMa,MAAK,SAACC,GAAD,OAAOA,EAAEzB,KAAOA,KAClC0B,EAAW,2BAAQ7C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDK,EACGU,OAAOC,EAAI0B,GACXjC,MAAK,SAACkC,GACLf,EAASD,EAAMY,KAAI,SAAC1C,GAAD,OAAWA,EAAKmB,KAAOA,EAAKnB,EAAO8C,SAEvDC,OAAM,SAACC,GACNX,EAAgB,QAAD,OAASrC,EAAKK,QAAd,qCACf4C,YAAW,kBAAMZ,EAAgB,QAAO,KACxCN,EAASD,EAAMW,QAAO,SAACG,GAAD,OAAOA,EAAEzB,KAAOA,SAuCV+B,CAAmBlD,EAAKmB,MAF3CnB,EAAKmB,SAMhB,uBAAMgC,SAvCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAAS2B,EACTuB,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG7BnD,EAAYO,OAAOuC,GAAY1C,MAAK,SAACkC,GACnCf,EAASD,EAAM8B,OAAOd,IACtBb,EAAW,QA6BX,UACE,uBAAO4B,MAAO7B,EAAS8B,SA1BJ,SAACV,GACxBW,QAAQC,IAAIZ,EAAMa,OAAOJ,OACzB5B,EAAWmB,EAAMa,OAAOJ,UAyBpB,wBAAQK,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC9FNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1d8f1fa6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\nexport default Note;\n","import axios from \"axios\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst noteService = { getAll, create, update };\nexport default noteService;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2021\n      </em>\n    </div>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message == null) return null;\n\n  return <div className=\"error\">{message}</div>;\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        setErrorMessage(`Note ${note.content} was already removed from server`);\n        setTimeout(() => setErrorMessage(null), 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}